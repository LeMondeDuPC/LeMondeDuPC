<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'validator.builder' shared service.

include_once $this->targetDirs[3].'/vendor/symfony/validator/Validation.php';
include_once $this->targetDirs[3].'/vendor/symfony/validator/ConstraintValidatorFactoryInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/validator/ContainerConstraintValidatorFactory.php';
include_once $this->targetDirs[3].'/vendor/symfony/validator/ObjectInitializerInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/doctrine-bridge/Validator/DoctrineInitializer.php';

$this->privates['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();

$instance->setConstraintValidatorFactory(new \Symfony\Component\Validator\ContainerConstraintValidatorFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, array(
    'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => array('privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService.php', true),
    'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => array('privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService.php', true),
    'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => array('privates', 'validator.email', 'getValidator_EmailService.php', true),
    'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => array('privates', 'validator.expression', 'getValidator_ExpressionService.php', true),
    'doctrine.orm.validator.unique' => array('privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService.php', true),
    'security.validator.user_password' => array('privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService.php', true),
    'validator.expression' => array('privates', 'validator.expression', 'getValidator_ExpressionService.php', true),
))));
$instance->setTranslator(($this->services['translator'] ?? $this->getTranslatorService()));
$instance->setTranslationDomain('validators');
$instance->addXmlMappings(array(0 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/config/validation.xml')));
$instance->enableAnnotationMapping(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));
$instance->addMethodMapping('loadValidatorMetadata');
$instance->addObjectInitializers(array(0 => new \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer(($this->services['doctrine'] ?? $this->getDoctrineService()))));

return $instance;
